FROM ubuntu:20.04 AS builder

ENV DEBIAN_FRONTEND noninteractive

# Install necessary packages without using sudo
RUN apt-get update -y \
    && apt-get clean \
    && apt-get install -y \
        cmake \
	wget \
	pkg-config \
        make \
        git \
        g++ \
        nvidia-cuda-toolkit \
        libopencv-dev \
        python3-opencv \
    && rm -rf /var/lib/apt/lists/*

# Download and install cuDNN
RUN wget https://developer.download.nvidia.com/compute/cudnn/9.1.0/local_installers/cudnn-local-repo-ubuntu2204-9.1.0_1.0-1_amd64.deb \
    && dpkg -i cudnn-local-repo-ubuntu2204-9.1.0_1.0-1_amd64.deb \
    && cp /var/cudnn-local-repo-ubuntu2204-9.1.0/cudnn-*-keyring.gpg /usr/share/keyrings/ \
    && apt-get update -y \
    && apt-get -y install cudnn \
    && rm cudnn-local-repo-ubuntu2204-9.1.0_1.0-1_amd64.deb

COPY  . /darknet

WORKDIR /darknet

RUN rm Dockerfile.cpu

RUN rm Dockerfile.gpu

RUN rm docker-compose.yml

RUN make

FROM nvidia/cuda:11.6.0-cudnn8-devel-ubuntu20.04

ENV DEBIAN_FRONTEND noninteractive

RUN apt-get update -y

RUN apt-get install -y sudo libgomp1

RUN useradd -U -m yolo

RUN usermod -aG sudo yolo 

RUN usermod --shell /bin/bash yolo

RUN echo "yolo:yolo" | chpasswd

COPY --from=builder /darknet /home/yolo/darknet

RUN cp /home/yolo/darknet/libdarknet.so /usr/local/lib/libdarknet.so || echo "libso not used"

RUN cp /home/yolo/darknet/include/darknet.h /usr/local/include/darknet.h

RUN ldconfig

WORKDIR /home/yolo/darknet

USER yolo

CMD ["bash"]